# Create live nodes (or return the existing nodes if already created)
- name: Create live servers (or retrieve the existing ones)
  local_action:    
    module: rax
    credentials: "{{ creds_servers_path }}"
    name: "{{ server_name }}"
    flavor: "{{ flavor }}"
    image: "{{ image }}"
    region: "{{ region }}"
    files: "{{ files }}"
    state: present
    count: "{{ count }}"
    group: "{{ group_environ }}"
    count_offset: 1
    exact_count: yes
    wait: yes
  register: workshop_green_nodes
  tags:
    - green-nodes

# Show all instances
- name: show created instances
  debug: var=workshop_green_nodes
  tags:
    - green-nodes

- name: Create blue servers
  local_action:    
    module: rax
    credentials: "{{ creds_servers_path }}"
    name: "{{ server_name }}"
    flavor: "{{ flavor }}"
    image: "{{ image }}"
    region: "{{ region }}"
    state: present
    count: "{{ count + new_count }}"
    group: "{{ group_environ }}"
    count_offset: 1
    exact_count: yes
    wait: yes
  register: workshop_blue_nodes
  tags:
    - blue-nodes

# Show new servers data
- name: show created instances
  debug: var=workshop_blue_nodes
  tags:
    - blue-nodes

# Create new ephemeral servers (show always be created anew)
- name: Delete ephemeral servers
  local_action:    
    module: rax
    credentials: "{{ creds_servers_path }}"
    name: "{{ server_name }}"
    flavor: "{{ flavor }}"
    image: "{{ image }}"
    region: "{{ region }}"
    state: absent
    count: "{{ count }}"
    group: "{{ group_environ }}"
    count_offset: 1
    exact_count: yes
    wait: yes
  register: workshop_ephemeral_nodes
  tags:
    - ephemeral-nodes

# Create new ephemeral servers (show always be created anew)
- name: Create ephemeral servers
  local_action:    
    module: rax
    credentials: "{{ creds_servers_path }}"
    name: "{{ server_name }}"
    flavor: "{{ flavor }}"
    image: "{{ image }}"
    region: "{{ region }}"
    state: present
    count: "{{ count }}"
    files: "{{ files }}"
    group: "{{ group_environ }}"
    count_offset: 1
    exact_count: yes
    wait: yes
  register: workshop_ephemeral_nodes
  tags:
    - ephemeral-nodes

# Show new servers data
- name: show created instances
  debug: var=workshop_ephemeral_nodes
  tags:
    - ephemeral-nodes

# Add new servers to workshop group, just as before
- name: Add BLUE servers to workshop host group
  local_action:
    module: add_host
    hostname: "{{ item.name }}"
    ansible_ssh_host: "{{ item.rax_accessipv4 }}"
    ansible_ssh_pass: "{{ item.rax_adminpass }}"
    ansible_ssh_user: root
    groupname: workshop
  with_items: workshop_blue_nodes.success
  when: workshop_blue_nodes.action == "create"
  tags:
    - blue-nodes

# Add new servers to blue load balancer
- name: Add BLUE servers to Blue Load balancer
  local_action:
    module: rax_clb_nodes
    credentials: "{{ creds_servers_path }}"
    load_balancer_id: "{{ raxio_blue_load_balancer.balancer.id }}"
    address: "{{ item.rax_addresses.private[0].addr }}"
    port: "{{ server_port }}" 
    condition: enabled
    type: primary
    wait: yes
    wait_timeout: 180
    region: "{{ region }}"
  with_items: workshop_blue_nodes.success
  when: workshop_blue_nodes.action == "create"
  tags:
    - blue-nodes

# Add new servers to workshop group, just as before
- name: Add ephemeral servers to workshop host group
  local_action:
    module: add_host
    hostname: "{{ item.name }}"
    ansible_ssh_host: "{{ item.rax_accessipv4 }}"
    ansible_ssh_pass: "{{ item.rax_adminpass }}"
    ansible_ssh_user: root
    groupname: workshop
  with_items: workshop_ephemeral_nodes.success
  when: workshop_ephemeral_nodes.action == "create"
  tags:
    - ephemeral-nodes

# Add new servers to ephemeral load balancer
- name: Add ephemeral servers to ephemeral Load balancer
  local_action:
    module: rax_clb_nodes
    credentials: "{{ creds_servers_path }}"
    load_balancer_id: "{{ raxio_ephemeral_load_balancer.balancer.id }}"
    address: "{{ item.rax_addresses.private[0].addr }}"
    port: "{{ server_port }}" 
    condition: enabled
    type: primary
    wait: yes
    wait_timeout: 180
    region: "{{ region }}"
  with_items: workshop_ephemeral_nodes.success
  when: workshop_ephemeral_nodes.action == "create"
  tags:
    - ephemeral-nodes

- name: Wait for port 22 to become available
  wait_for: port=22 host="{{ item.name }}" delay=10 timeout=60 connect_timeout=30
  with_items: workshop_ephemeral_nodes.success
  when: workshop_ephemeral_nodes.action == "create"
    