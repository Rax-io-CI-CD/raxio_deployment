---
- name: Set up user
  user: name=workshop shell=/bin/bash home=/home/workshop
  tags:
    - deploy

- name: Download git
  apt: name=git update_cache=yes
  tags:
    - deploy

# Install node js
- name: Ensure the system can use the HTTPS transport for APT
  stat: path=/usr/lib/apt/methods/https
  register: apt_https_transport
  tags:
    - deploy

- name: Install HTTPS transport for APT
  apt: pkg=apt-transport-https state=installed
  when: not apt_https_transport.stat.exists
  tags:
    - deploy

- name: Import the NodeSource GPG key into apt
  apt_key: url=https://deb.nodesource.com/gpgkey/nodesource.gpg.key state=present
  tags:
    - deploy

- name: Add NodeSource deb repository
  apt_repository: repo='deb https://deb.nodesource.com/node {{ ansible_distribution_release }} main' state=present
  tags:
    - deploy

- name: Add NodeSource deb-src repository
  apt_repository: repo='deb-src https://deb.nodesource.com/node {{ ansible_distribution_release }} main' state=present
  tags:
    - deploy

- name: Add NodeSource repository preferences
  template:
    src: etc/apt/preferences.d/deb_nodesource_com_node.pref.2
    dest: /etc/apt/preferences.d/deb_nodesource_com_node.pref
  tags:
    - deploy

- name: Install Node.js
  apt: pkg=nodejs state=installed update_cache=yes
  tags:
    - deploy

- name: Install build-essential
  apt: pkg=build-essential state=latest update_cache=yes cache_valid_time=86400
  tags:
    - deploy

- name: Create npm_global directory
  file: path=/home/workshop/npm_global state=directory mode=0755 owner=workshop group=workshop recurse=yes
  tags:
    - deploy
  
- name: Set npm installation to npm_global
  command: su workshop -l -c 'npm config set prefix "{{ user_location }}/npm_global"'
  tags:
    - deploy
  
- name: Install bower globally
  command: su workshop -l -c 'npm install bower -g'
  tags:
    - deploy
  
- name: Install grunt globally
  command: su workshop -l -c 'npm install grunt-cli -g'
  tags:
    - deploy
  
- name: Create ssh directory
  file: path=/home/workshop/.ssh state=directory mode=0755 owner=workshop group=workshop recurse=yes
  tags:
    - deploy

- name: Copy config
  template: src={{item.src}} dest={{item.dest}} owner=workshop backup=yes
  with_items:
    - {src: ssh_config.j2 , dest: /home/workshop/.ssh/config }  

- name: Copy config for root
  template: src={{item.src}} dest={{item.dest}} backup=yes
  with_items:
    - {src: ssh_config.j2 , dest: /root/.ssh/config }  
  tags: 
    - deploy

- name: Fetch over ssh key
  copy: src=/var/lib/jenkins/.ssh/id_rsa dest=/root/.ssh/id_rsa owner=root group=root mode=0400
  tags: 
    - deploy

- name: Fetch over ssh key for workshop
  copy: src=/var/lib/jenkins/.ssh/id_rsa dest=/home/workshop/.ssh/id_rsa owner=workshop group=root mode=0400
  tags: 
    - deploy
      
- name: Clone target repository
  sudo: yes
  git: repo={{ repo }}
    dest=/home/workshop/workshop
    accept_hostkey=yes
  tags: 
    - deploy

- name: Set perms on workshop directory
  file: path=/home/workshop/workshop state=directory mode=0755 owner=workshop group=workshop recurse=yes
  tags:
    - deploy

- name: Run npm install and bower install as workshop
  command: su workshop -l -c 'PATH=/home/workshop/npm_global/bin:$PATH && cd /home/workshop/workshop && npm install && bower install'
  ignore_errors: yes
  tags:
    - deploy
    
- name: Run grunt
  command: su workshop -l -c 'PATH=/home/workshop/npm_global/bin:$PATH && cd /home/workshop/workshop && grunt serve &'
  ignore_errors: yes
  tags:
    - deploy

- name: Wait for port 9000 to become available
  wait_for: port=9000 host=127.0.0.1 delay=30 timeout=60
  tags:
    - deploy
      